Here is how I was able to get the AMOA '82 logo back in the final build of Sinistar. 

For those who don't know, the AMOA '82 build of Sinistar is the earliest build of
the game that's been preserved and is also the earliest version of the game that
was revealed to the public.  It has some incomplete features and bugs and was
first shown on November 18th, 1982 at the Amusement and Music Operators Association
show at the Hyatt Regency Hotel in Chicago, Illinois.

-------------------

http://www.panix.com/~douglas/sinistar.html

Douglas's Sinistar page lists some differences between this version and the final
game.  The one that's most relevant to us is this:

   * In attract mode, the word SINISTAR is displayed in big red letters in the shape
     of the word on the marquee. (See the top of this page.) (Much cooler than the
     standard attract mode display, in my opinion.)

I totally agree, and with this mod we can finally make this a reality.

SynaMax - 10/6/2023

			*** Part 1: Getting Started ***

This mod has several prerequisites:

* KenChk must be be disabled (see mame-cheat-sheet.src for instructions)
* We must overwrite the RAM and ROM tests in Rom 11 to fit the 721 (aka $2D1) bytes
of data needed for this routine. This means that you can not use the RAM or ROM test
in a real cabinet if you were to burn a ROM set for your PCB.
* Overwriting the copyright string at $3435 (Rom 4), which is why KenChk must be
disabled.

In the original AMOA ROM set (sinistarp in MAME), the MARQUEE routine is located at
$7D93.  The MARKEY table, the larger section of code, is located at $7E04.

			*** Part 2: Source Code ***

We're very lucky to have this source code because this routine and table were not
included in the final game (most likely due to space constraints).  This is also the
only commented code from Mike Metz that has survived.  Kenneth F. Lantz was Noah
Falstein's boss, I believe his title was director of software development.  He might
be who KenChk is named after.  

Ken also wrote code that survived in Joust so we know these weird funny comments
have gotta be Mike.  I mean this in the nicest way possible, but this code makes
it seem like he was high when he wrote it.  Or maybe he just had a quirky sense of
humor back then, who knows?  Regardless, I'm just really glad all of this source
code was preserved, even after being removed from the final version (V17).

******************************************************************************
*
* Marquee Page
*   By Ken Lantz and Mike Metz
*
MARQUEE	PSHS	Y		Now resave Y through the next trial

*		TABLE CONCISTS OF COLUMN OFFSETS BYTES FOLLOWED BY
*	LENGTH BYTE(S) <BYTES ENCODED WITH LENGTH (IN PIXELS), COLOR,
*			AND FLAG IF LAST LENGTH IN THIS COLUMN (IE:NEXT BYTE
*			IS AN OFFSET)>
*	TABLE TERMINATES WITH ZERO LENGTH OFFSET
*
*

	LDA	#$7		;Force Special Effects color E to go red
	STA	PCRAM+$E

	LDY	#MARKEY		;Marquee table
;;	LDX	#$6825		;;(found in "sinistarp" ROM set)
	LDX	#$7225		;COLUMN OFFSETS $26 THRU $D0

OWELL	TFR	X,D
;;	LDA	#$68		;;(found in "sinistarp" ROM set)
	LDA	#$72		
	INCB
	CMPB	#$D0
	LBHI	FINSIT
	TFR	D,X

11$	CLRB		;ASSUME BLACK AT FIRST
	LDA	,Y	;LENGTH		 CODE=  LCXX XXXX
	BITA	#$40	;COLOR SELECTION		  !!-!!!! SIX BIT LENGTH
	BEQ	2$	;			 !COLOR BIT 0=BLACK,1=RED
	LDB	#$EE	;			!LAST LENGTH IN COLUMN IF=1

2$	ANDA	#$3F	;STRIP OUT THE LENGTH

22$	DECA		;ODD PIXEL LENGTH TEST
	BEQ	3$
	STB	,X	;AT LEST AN EVEN PIXEL LENGTH
	LEAX	-$100,X	;MOVING DOWN THE COLUMN
	DECA		;AN EVEN BOUNDRY PERCHANCE
	BNE	22$	;NOPE, CHECK FOR AN ODD ONE (OR TWO (OR TOO( OR TO)))

4$	TST	,Y+	;RECOGNIZE AND ADVANCE (OR VISIVERSE) COLUMN END?
	BMI	OWELL	;NEW OFFSET TO BE CAD (HAD)       SAD...
	BRA	11$	;OWELL BACK FOR ANOTHER

3$	EORB	#$E0	;WWE GOT AN ODD ONE   DON'T WWE
	STB	,X	;END IT EVEN, LENGTH ALWAY START ON EVEN BOUNDRIES
	LEAX	-$100,X	;AND ADVANCE
	BRA	4$	;OF COURSE YOU GOTDA CHECK THIS ONE TOO.


FINSIT	TEXT	$52,$CD
;;	TEXT	$48,$CD		;;(AMOA old position)
	PHRASE	RED,35,TM
	TEXT	$4A,LEFEDG
;;	TEXT	$40,LEFEDG	;;(AMOA old position)
	PHRASE	RED,35,COPYRIGHT,1982,WILLIAMS,ELECTRONICS,INC
	
	PULS	Y,PC


;******************************************************************************
;* THE MARKEY TABLE
;*   Everything you wanted to know about the Sinistar Marquee
;*   compacted into fewer bytes than ever known to man before
;*	

MARKEY	FCB $2A,$C3
	FCB $2A,$C6
	FCB $0D,$48,$16,$C7
	FCB $0D,$4D,$12,$C8 
	FCB $0D,$50,$10,$C8
	FCB $0E,$51,$0F,$C9
	FCB $06,$43,$05,$53,$0E,$CA
	FCB $06,$45,$04,$53,$0E,$CA
	FCB $05,$48,$02,$54,$0E,$CA
	FCB $05,$5F,$0D,$CB
	FCB $05,$60,$0D,$CB
	FCB $05,$61,$0C,$CB
	FCB $05,$61,$0D,$CB
	FCB $05,$60,$0E,$CB
	FCB $06,$5E,$0F,$CB
	FCB $06,$60,$0D,$CC
	FCB $06,$65,$08,$CC
	FCB $06,$F9
	FCB $06,$FA
	FCB $07,$4D,$02,$EA
	FCB $07,$4D,$04,$E8
	FCB $08,$4C,$06,$E7
	FCB $09,$4B,$07,$E6
	FCB $0A,$4A,$07,$E6
	FCB $0C,$48,$07,$E6
	FCB $0D,$48,$07,$E5 
	FCB $0E,$47,$09,$E3
	FCB $10,$46,$0A,$E1
	FCB $11,$46,$0C,$DE
	FCB $13,$45,$0D,$DB
	FCB $15,$44,$0F,$D7
	FCB $2D,$CE
	FCB $9F
	FCB $13,$CC
	FCB $11,$D1
	FCB $10,$58,$0B,$CA
	FCB $0F,$EC
	FCB $0E,$EC
	FCB $0D,$ED 
	FCB $0C,$EE
	FCB $0B,$46,$0D,$DC
	FCB $0B,$44,$12,$DA
	FCB $0B,$42,$17,$D7
	FCB $0B,$41,$07,$49,$0A,$D5
	FCB $11,$4E,$0A,$CA
	FCB $0F,$52,$0B,$C5
	FCB $0E,$56,$12,$C2
	FCB $0D,$5C,$0B,$C4
	FCB $0D,$EB 
	FCB $0C,$EC
	FCB $0C,$46,$06,$E0
	FCB $0C,$42,$0C,$DF
	FCB $0C,$41,$0F,$49,$02,$D1
	FCB $1D,$49,$03,$CE
	FCB $1E,$49,$05,$C6
	FCB $1F,$C9
	FCB $14,$49,$03,$CA
	FCB $12,$DC
	FCB $11,$E0
	FCB $10,$E3
	FCB $0F,$E5
	FCB $0E,$E7
	FCB $0D,$45,$05,$DE
	FCB $18,$4C,$07,$CA
	FCB $2F,$C6
	FCB $B0
	FCB $14,$CA
	FCB $12,$D0
	FCB $11,$D3
	FCB $10,$57,$0A,$C3 
	FCB $0F,$E5
	FCB $0F,$E5
	FCB $0E,$46,$04,$DC
	FCB $0E,$44,$0B,$D7 
	FCB $0E,$43,$0E,$D5
	FCB $0E,$41,$12,$D2
	FCB $23,$CC
	FCB $25,$C8
	FCB $13,$48,$0C,$C5
	FCB $12,$CC
	FCB $13,$CE
	FCB $14,$CE 
	FCB $0F,$43,$03,$4A,$08,$C3
	FCB $0E,$55,$05,$C4
	FCB $0E,$54,$06,$C5
	FCB $0E,$53,$08,$C5
	FCB $0E,$53,$08,$C6
	FCB $0E,$54,$07,$C7 
	FCB $0E,$56,$05,$C8
	FCB $0F,$49,$02,$4D,$02,$C9
	FCB $0F,$49,$03,$D7
	FCB $10,$48,$04,$D7
	FCB $11,$47,$05,$D6
	FCB $12,$46,$05,$D6 
	FCB $13,$45,$04,$D7
	FCB $14,$45,$03,$D8
	FCB $15,$44,$04,$D7
	FCB $17,$43,$05,$D5
	FCB $21,$D3
	FCB $26,$CD
	FCB $B0
	FCB $18,$C2
	FCB $12,$46,$01,$41,$19,$C1
	FCB $11,$49,$18,$C2
	FCB $10,$4A,$15,$C5
	FCB $10,$49,$13,$C8
	FCB $10,$49,$04,$D7
	FCB $10,$49,$01,$DA
	FCB $11,$67,$01,$C1
	FCB $11,$E2
	FCB $11,$E1
	FCB $11,$E0
	FCB $11,$E0
	FCB $10,$4E,$06,$CC
	FCB $10,$4A,$0D,$C8
	FCB $10,$C8
	FCB $0F,$C8
	FCB $0F,$C7
	FCB $0F,$47,$11,$CA
	FCB $0E,$48,$0B,$D4
	FCB $0E,$48,$08,$D9 
	FCB $0D,$49,$05,$DC
	FCB $0E,$44,$08,$DA
	FCB $05,$41,$16,$D5
	FCB $05,$41,$17,$D3
	FCB $04,$42,$0F,$47,$02,$D2
	FCB $0C,$41,$07,$DB 
	FCB $0C,$42,$05,$D3
	FCB $0B,$44,$02,$D3
	FCB $0B,$D8
	FCB $0B,$D8 
	FCB $0B,$4B,$05,$C8
	FCB $0B,$4A,$05,$DB
	FCB $0B,$49,$06,$DD
	FCB $0C,$4B,$04,$DE
	FCB $0C,$EE
	FCB $0D,$EE
	FCB $0E,$EE
	FCB $0F,$ED 
	FCB $10,$4E,$03,$51,$08,$C2
	FCB $08,$41,$09,$4A,$06,$CD
	FCB $08,$41,$1B,$C9
	FCB $08,$42,$2D,$C2
	FCB $08,$41,$01,$41,$2A,$C5
	FCB $08,$44,$25,$CA
	FCB $09,$44,$15,$DA
	FCB $09,$45,$13,$DC
	FCB $0A,$47,$05,$47,$03,$DE
	FCB $0A,$54,$01,$DE
	FCB $0B,$F2
	FCB $0B,$F1 
	FCB $0C,$F0
	FCB $0C,$EF
	FCB $0C,$64,$01,$C1
	FCB $0D,$5C,$17,$C1
	FCB $0D,$48,$05,$4F,$16,$C2
	FCB $0D,$48,$05,$4F,$15,$C3 
	FCB $0E,$47,$05,$50,$12,$C5
	FCB $0E,$48,$04,$51,$0F,$C6
	FCB $0E,$49,$03,$53,$0B,$C8
	FCB $0F,$49,$03,$E4
	FCB $0F,$4B,$01,$E3
	FCB $10,$52,$02,$D9
	FCB $11,$51,$03,$D8
	FCB $12,$50,$03,$D7
	FCB $14,$4F,$02,$D6
	FCB $16,$4D,$02,$D4
	FCB $18,$4B,$02,$D3
	FCB $1C,$46,$04,$D0
	FCB $27,$CC
	FCB $28,$C8
	FCB $00 

	ENDIF		; Whole file is not included if KENSMARQ is undefined

	PULLORG	ROMSAV

--------------------------------------------------------------
			*** Part 3: Code Differences ***

There are several differences between this code and what appears in the AMOA build:

	LDY	#MARKEY		;Marquee table
;;	LDX	#$6825		;;(found in "sinistarp" ROM set)
	LDX	#$7225		;COLUMN OFFSETS $26 THRU $D0

OWELL	TFR	X,D
;;	LDA	#$68		;;(found in "sinistarp" ROM set)
	LDA	#$72		

Both instances of $72 in the source code were originally $68 in the AMOA ROM.
These bytes represent the vertical position of the Sinistar AMOA marquee logo.  In the
original AMOA ROM, the $68 meant that the graphic was placed in the center of the
screen.  However, this new $72 value places the graphics slightly higher up,
making room for the operator message, which is normally displayed as two rows of
"0"s on the title screen.  Because of this, I believe this source code is newer than
the AMOA ROM and shows that the devs were still working on it after the AMOA '82 show.

FINSIT	TEXT	$52,$CD
;;	TEXT	$48,$CD		;;(AMOA old position)
	PHRASE	RED,35,TM
	TEXT	$4A,LEFEDG
;;	TEXT	$40,LEFEDG	;;(AMOA old position)
	PHRASE	RED,35,COPYRIGHT,1982,WILLIAMS,ELECTRONICS,INC

The text position also changed in the source code and the copyright string lines up
perfectly with the string in the final build.  Note that Sinistar doesn't use ASCII like
other games, it has this weird but optimized way of displaying text so trying to find
in-game text in Sinistar is difficult.  The PHRASE routine or the values that represet
the letters/strings changed between builds and display incorrectly so I copied the
strings from the final version and changed the position bytes manually.  Only the
vertical positions were modified, the horizontal positions ($CD and LEFEDG) are the same.

"TM" PHRASE (FINAL BUILD):
8E 52 CD BD 2E 44 C6 DD 86 94 BD E2 0C

"TM" PHRASE (AMOA BUILD):
8E 48 CD BD 2E 44 C6 DD 86 81 BD E2 0C

COPYRIGHT PHRASE (FINAL BUILD):
8E 4A 2C BD 2E 44 C6 DD 86 95 BD E2 0C 86 96 BD E2 0C 86 97 BD E2 0C 86 98 BD E2 0C 86 99 BD E2 0C

COPYRIGHT PHRASE (AMOA BUILD):
8E 40 2C BD 2E 44 C6 DD 86 82 BD E2 0C 86 83 BD E2 0C 86 84 BD E2 0C 86 85 BD E2 0C 86 86 BD E2 0C

------------------------------------------------------------------

			*** Part 4: Overwriting Rug Test Code ***

We need a lot of space in order to get this code in the final build.  The entire MARQUEE
chunk of data adds up to a total of $2D1 bytes so I needed a large portion of ROM space.
I decided to wipe out the ROM and RAM tests because there is already a hack where we can
skip the "Rug" test entirely by overwriting the jumps located at $F063 and $F069 with NOPs.
This is nice because it allows us to boot directly into the game.  Unfortunately, this
removes the ability to let us know if there's something wrong with the ROM or RAM.  

This mod also disables the operator's menu so there's no way to get into the settings and
view other diagnoistic stuff, even though the code is still there.  I might be able to fix
this at a later point but since this is not the main focus of this mod, this issue isn't
super important.

In an incredible stroke of luck, the entire chuck of data for the RAM and ROM tests 
equals to a total of $2D2 bytes, just one byte over what I needed!  There is one problem
though and that's where KenChk comes in.  There is a JMP instruction at $F09C that points
to a section of code inside the $2D2-sized chuck that we need to overwrite.  This sub-
routine is responsible for getting us out of the Rug test and launching the game, so we
need to place it somewhere else in the game's data and execute it or otherwise the game
will never boot.  This is what that code looks like:

DELA1	LDX	#$5800
DELA2	LEAX	-1,X
	LDB	#WDATA
	STB	WDOG
	CMPX	#0
	BNE	DELA2
	DECA
	BNE	DELA1
	JMP	,Y	;RETURN

Instead of pointing to $F1FD, we'll point it to $3435, which is where we'll over-
write a copyright string.  Again, we'll need KenChk disabled or otherwise the
Sinistar character will never spawn and other weird anti-piracy quirks will happen.

At $3435, overwrite the Copyright string with the following bytes:
8E 58 00 30 1F C6 39 F7 CB FF 8C 00 00 26 F4 4A 26 EE 6E A4

The game will jump to this address and run this necessary code.  If everything
was done correctly, the CPU will skip the test and go directly to the game, all
while giving us $2D2 bytes of room to play around with.

-------------------------------------------------------------------------------------

			*** Part 5: MARQUEE Routine address fix ***

Fortunately, there's only one change that we need to do in the MARQUEE routine,
like the previously mentioned Copyright and "TM" text positioning.  We only need
to change the address for MARKEY ($7E04) that loads into Y.

Paste the MARQUEE binary data at $F09F, the start of our new area to overwrite in.
At $F0A7, change the $7E04 to the new MARKEY address, $F110.

-------------------------------------------------------------------------------------

			*** Part 6: Fixing the game logic ***

Finally, we need to insert a call to the new MARQUEE routine inside the game logic
code.  In a super awesome move, RJ Mical put in comments that explain how to call the
original marquee routine.  This can be found in MICA/ZZATTRAC.SRC:

******************************************************************************
*
* Marquee Page
*   By Ken Lantz and Mike Metz
*
10$	PSHS	Y		Now resave Y through the next trial

	LDA	#%00110011	Set PANMASK to allow
	STA	PANMASK		  PLAYER 1/2 Start, Fire and Sinibomb buttons

	JSR	CLRSCR		Clear that ol' whole-screen again
	JSR	DCREDITS


	IFDEF	KENSMARQ  * Defining this includes Ken's Marquee Display
	JSR	MARQUEE
	ELSE
* To patch in Ken's Marquee, overwrite this Text/Phrase combination
*   with a JSR MARQUEE and several NOPs.  
	TEXT	$58,$65
	PHRASE	RED,68,SINISTAR
	TEXT	$54,$99
	PHRASE	RED,35,TM
	ENDIF
---------------------------------------------------------------------
Well, that makes my job a lot easier; thank you so much, RJ!

At address $811E, overwrite the whimpy old Sinistar typefont logo
with this:

BD F0 9F 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12



